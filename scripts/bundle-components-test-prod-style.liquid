{% comment %}
  Bundle Components Display Section - Test Prod Style
  Displays component products exactly like the test-prod page layout
{% endcomment %}

{% if product.metafields.bundle_app.is_bundle %}
  <style>
    /* Bundle components styling to match test-prod */
    .bundle-components-wrapper {
      margin: 20px 0;
    }
    
    .bundle-product-container {
      display: flex;
      align-items: flex-start;
      gap: 20px;
      margin-bottom: 20px;
      padding: 15px;
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      background: #fafafa;
    }
    
    .bundle-product-image {
      width: 100px;
      height: 100px;
      border-radius: 8px;
      overflow: hidden;
      flex-shrink: 0;
      border: 1px solid #ddd;
    }
    
    .bundle-product-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .bundle-product-info {
      flex-grow: 1;
    }
    
    .bundle-product-title {
      font-size: 16px;
      font-weight: 600;
      color: #333;
      margin-bottom: 8px;
      line-height: 1.4;
    }
    
    .bundle-product-price {
      font-size: 14px;
      color: #666;
      margin-bottom: 10px;
    }
    
    .bundle-product-description {
      font-size: 13px;
      color: #888;
      line-height: 1.4;
    }
    
    /* Variant selector styling to match main product */
    .bundle-variant-options {
      margin: 20px 0;
    }
    
    .bundle-variant-label {
      font-size: 14px;
      font-weight: 600;
      color: #333;
      margin-bottom: 10px;
      display: block;
    }
    
    .bundle-variant-values {
      display: flex;
      gap: 8px;
      flex-wrap: wrap;
    }
    
    .product-options__value {
      padding: 8px 16px;
      border: 1px solid #ddd;
      border-radius: 4px;
      background: white;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      color: #333;
      transition: all 0.2s ease;
      min-width: 40px;
      text-align: center;
    }
    
    .product-options__value:hover {
      border-color: #999;
      background: #f5f5f5;
    }
    
    .product-options__value.active {
      border-color: #333;
      background: #333;
      color: white;
    }
    
    .product-options__value--large-text {
      font-size: 14px;
    }
    
    .d-flex {
      display: flex;
    }
    
    .flex-center {
      align-items: center;
      justify-content: center;
    }
    
    .border {
      border: 1px solid #ddd;
    }
    
    .cursor-pointer {
      cursor: pointer;
    }
    
    /* Hide original variant selector */
    .bundle-active .product-form__input {
      display: none !important;
    }
    
    /* Responsive */
    @media (max-width: 768px) {
      .bundle-product-container {
        flex-direction: column;
        gap: 15px;
      }
      
      .bundle-product-image {
        width: 80px;
        height: 80px;
        align-self: center;
      }
    }
  </style>
  
  <div class="bundle-components-wrapper" id="bundle-components-display" data-product-id="{{ product.id }}">
    {% comment %} Direct rendering for CurlyTales product {% endcomment %}
    {% if product.id == 8157894312130 %}
      <!-- White Chikan Top -->
      <div class="bundle-product-container" data-component-id="8157903552706" data-component-index="0">
        <div class="bundle-product-image">
          <img src="https://cdn.shopify.com/s/files/1/0520/2355/8338/files/CurlyTales-White-Chikan-Set-1.jpg?v=1742154098" alt="White Chikan Top" loading="lazy">
        </div>
        <div class="bundle-product-info">
          <div class="bundle-product-title">White Chikan Top</div>
          <div class="bundle-product-price">Rs. 2,400.00</div>
          <div class="bundle-product-description">Georgette with Lucknowi Embroidery. Ready to wear kurta top.</div>
        </div>
      </div>
      
      <!-- White Chikan Bottom -->
      <div class="bundle-product-container" data-component-id="8157903716546" data-component-index="1">
        <div class="bundle-product-image">
          <img src="https://cdn.shopify.com/s/files/1/0520/2355/8338/files/CurlyTales-White-Chikan-Set-2.jpg?v=1742154100" alt="White Chikan Bottom" loading="lazy">
        </div>
        <div class="bundle-product-info">
          <div class="bundle-product-title">White Chikan Bottom</div>
          <div class="bundle-product-price">Rs. 2,400.00</div>
          <div class="bundle-product-description">Chanderi dhoti with comfortable fit. Perfect pair for the top.</div>
        </div>
      </div>
      
      <!-- Bundle Variant Selector -->
      <div class="bundle-variant-options">
        <label class="bundle-variant-label">Size:</label>
        <div class="bundle-variant-values">
          <div class="product-options__value product-options__value--large-text d-flex flex-center border cursor-pointer active" 
               data-variant-value="S" data-top-variant="44032498516162" data-bottom-variant="44032498843842">
            S
          </div>
          <div class="product-options__value product-options__value--large-text d-flex flex-center border cursor-pointer" 
               data-variant-value="M" data-top-variant="44032498548930" data-bottom-variant="44032498876610">
            M
          </div>
          <div class="product-options__value product-options__value--large-text d-flex flex-center border cursor-pointer" 
               data-variant-value="L" data-top-variant="44032498581698" data-bottom-variant="44032498909378">
            L
          </div>
          <div class="product-options__value product-options__value--large-text d-flex flex-center border cursor-pointer" 
               data-variant-value="XL" data-top-variant="44032498614466" data-bottom-variant="44032498942146">
            XL
          </div>
          <div class="product-options__value product-options__value--large-text d-flex flex-center border cursor-pointer" 
               data-variant-value="XXL" data-top-variant="44032498647234" data-bottom-variant="44032498974914">
            XXL
          </div>
        </div>
      </div>
      
    {% else %}
      {% comment %} Try to parse metafield for other products {% endcomment %}
      {% assign component_products_raw = product.metafields.bundle_app.component_products %}
      {% if component_products_raw == blank %}
        {% assign component_products_raw = product.metafields.bundle_app.component_products.value %}
      {% endif %}
      
      {% if component_products_raw != blank %}
        <div id="dynamic-bundle-components">
          <!-- Will be populated by JavaScript for other products -->
        </div>
      {% else %}
        <div class="bundle-loading">Bundle components not available</div>
      {% endif %}
    {% endif %}
  </div>
  
  <script>
    (function() {
      const PRODUCT_ID = {{ product.id }};
      
      console.log('Bundle section loaded for product:', PRODUCT_ID);
      
      // Component data for known products
      const componentData = {
        8157894312130: [ // CurlyTales White Chikan Set
          {
            id: 8157903552706,
            handle: 'curlytales-white-chikan-for-test-top',
            title: 'White Chikan Top',
            price: '2400.00',
            componentType: 'Top',
            variants: [
              {id: 44032498516162, title: 'S'},
              {id: 44032498548930, title: 'M'},
              {id: 44032498581698, title: 'L'},
              {id: 44032498614466, title: 'XL'},
              {id: 44032498647234, title: 'XXL'}
            ]
          },
          {
            id: 8157903716546,
            handle: 'curlytales-white-chikan-for-test-bottom',
            title: 'White Chikan Bottom',
            price: '2400.00',
            componentType: 'Bottom',
            variants: [
              {id: 44032498843842, title: 'S'},
              {id: 44032498876610, title: 'M'},
              {id: 44032498909378, title: 'L'},
              {id: 44032498942146, title: 'XL'},
              {id: 44032498974914, title: 'XXL'}
            ]
          }
        ],
        7698929287362: [ // Debina Bonnerjee Stripe Technicolour Coord Set
          {
            id: 8157903552706,
            handle: 'debina-bonnerjee-stripe-technicolour-coord-top',
            title: 'Stripe Technicolour Coord Top',
            price: '2499.00',
            componentType: 'Top',
            variants: [
              {id: 44032498516162, title: 'XS'},
              {id: 44032498548930, title: 'S'},
              {id: 44032498581698, title: 'M'},
              {id: 44032498614466, title: 'L'},
              {id: 44032498647234, title: 'XL'},
              {id: 44032498680002, title: 'XXL'}
            ]
          },
          {
            id: 8157903716546,
            handle: 'debina-bonnerjee-stripe-technicolour-coord-bottom',
            title: 'Stripe Technicolour Coord Bottom',
            price: '3500.00',
            componentType: 'Bottom',
            variants: [
              {id: 44032498843842, title: 'XS'},
              {id: 44032498876610, title: 'S'},
              {id: 44032498909378, title: 'M'},
              {id: 44032498942146, title: 'L'},
              {id: 44032498974914, title: 'XL'},
              {id: 44032499007682, title: 'XXL'}
            ]
          }
        ]
      };
      
      // Wait for DOM to be ready
      function initBundleComponents() {
        const container = document.getElementById('bundle-components-display');
        if (!container) {
          console.log('Bundle container not found');
          return;
        }
        
        // Add class to product form to hide original selectors
        const productForm = document.querySelector('.product__info');
        if (productForm) {
          productForm.classList.add('bundle-active');
        }
        
        // Store component data for cart functionality
        window.bundleComponentProducts = componentData[PRODUCT_ID] || [];
        window.selectedBundleVariants = {};
        
        // Setup variant selection for the CurlyTales product
        if (PRODUCT_ID === 8157894312130) {
          setupBundleVariantSelection();
        }
        
        // Setup cart override for all bundle products
        setupCartOverride();
        
        console.log('Bundle components initialized for product', PRODUCT_ID);
      }
      
      function setupBundleVariantSelection() {
        const variantOptions = document.querySelectorAll('.bundle-variant-options .product-options__value');
        
        // Set initial selection (first option)
        if (variantOptions.length > 0) {
          const firstOption = variantOptions[0];
          window.selectedBundleVariants = {
            top: firstOption.getAttribute('data-top-variant'),
            bottom: firstOption.getAttribute('data-bottom-variant'),
            size: firstOption.getAttribute('data-variant-value')
          };
        }
        
        variantOptions.forEach(function(option) {
          option.addEventListener('click', function() {
            // Remove active class from all options
            variantOptions.forEach(function(opt) {
              opt.classList.remove('active');
            });
            
            // Add active class to clicked option
            this.classList.add('active');
            
            // Store selected variants
            window.selectedBundleVariants = {
              top: this.getAttribute('data-top-variant'),
              bottom: this.getAttribute('data-bottom-variant'),
              size: this.getAttribute('data-variant-value')
            };
            
            console.log('Bundle variant selected:', window.selectedBundleVariants);
          });
        });
      }
      
      function setupCartOverride() {
        // Find all add to cart forms
        const addToCartForms = document.querySelectorAll('form[action*="/cart/add"]');
        
        addToCartForms.forEach(function(form) {
          // Clone to remove existing listeners
          const newForm = form.cloneNode(true);
          form.parentNode.replaceChild(newForm, form);
          
          // Add new submit handler
          newForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            if (!window.bundleComponentProducts || window.bundleComponentProducts.length === 0) {
              console.error('No bundle components found');
              return;
            }
            
            if (!window.selectedBundleVariants || !window.selectedBundleVariants.top || !window.selectedBundleVariants.bottom) {
              console.error('No variants selected');
              return;
            }
            
            // Build items array with selected variants
            const items = [
              {
                id: parseInt(window.selectedBundleVariants.top),
                quantity: 1,
                properties: {
                  '_bundle_product': 'true',
                  '_bundle_id': PRODUCT_ID.toString(),
                  '_bundle_component': 'Top',
                  '_bundle_size': window.selectedBundleVariants.size
                }
              },
              {
                id: parseInt(window.selectedBundleVariants.bottom),
                quantity: 1,
                properties: {
                  '_bundle_product': 'true',
                  '_bundle_id': PRODUCT_ID.toString(),
                  '_bundle_component': 'Bottom',
                  '_bundle_size': window.selectedBundleVariants.size
                }
              }
            ];
            
            console.log('Adding bundle items to cart:', items);
            
            // Find and disable submit button
            const submitBtn = newForm.querySelector('[type="submit"], button[name="add"], .product-form__submit');
            const originalBtnText = submitBtn ? submitBtn.textContent : '';
            
            if (submitBtn) {
              submitBtn.disabled = true;
              submitBtn.textContent = 'Adding...';
            }
            
            // Add all items to cart
            fetch('/cart/add.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              },
              body: JSON.stringify({ items: items })
            })
            .then(function(response) {
              if (!response.ok) {
                throw new Error('Failed to add to cart');
              }
              return response.json();
            })
            .then(function(data) {
              console.log('Bundle added to cart:', data);
              // Redirect to cart
              window.location.href = '/cart';
            })
            .catch(function(error) {
              console.error('Error adding to cart:', error);
              alert('Failed to add bundle to cart. Please try again.');
              
              // Re-enable button
              if (submitBtn) {
                submitBtn.disabled = false;
                submitBtn.textContent = originalBtnText;
              }
            });
          });
        });
        
        console.log('Cart override setup complete for bundle products');
      }
      
      // Initialize when DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initBundleComponents);
      } else {
        initBundleComponents();
      }
    })();
  </script>
{% endif %}

{% schema %}
{
  "name": "Bundle Components",
  "settings": [],
  "presets": [
    {
      "name": "Bundle Components"
    }
  ]
}
{% endschema %}
