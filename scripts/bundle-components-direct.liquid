{% comment %}
  Bundle Components Display Section - Direct Rendering
  Displays component products exactly like the test-prod page
{% endcomment %}

{% if product.metafields.bundle_app.is_bundle %}
  <style>
    .bundle-components-container {
      margin: 20px 0;
      padding: 15px;
      background: #f9fafb;
      border-radius: 8px;
    }
    
    .bundle-product-item {
      display: flex;
      align-items: center;
      padding: 12px 0;
      border-bottom: 1px solid #e5e7eb;
      gap: 15px;
    }
    
    .bundle-product-item:last-child {
      border-bottom: none;
    }
    
    .bundle-product-image {
      width: 80px;
      height: 80px;
      border-radius: 6px;
      overflow: hidden;
      flex-shrink: 0;
      border: 1px solid #e5e7eb;
      background: white;
    }
    
    .bundle-product-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .bundle-product-details {
      flex-grow: 1;
      min-width: 0;
    }
    
    .bundle-product-title {
      font-size: 14px;
      line-height: 1.4;
      color: #111827;
      margin-bottom: 6px;
      font-weight: 500;
    }
    
    .bundle-product-price {
      font-size: 13px;
      color: #6b7280;
      margin-bottom: 8px;
    }
    
    .bundle-variant-selector {
      margin-left: auto;
      min-width: 100px;
    }
    
    .bundle-variant-select {
      width: 100%;
      padding: 8px 12px;
      border: 1px solid #d1d5db;
      border-radius: 4px;
      font-size: 14px;
      background: white;
      cursor: pointer;
      font-family: inherit;
    }
    
    .bundle-variant-select:focus {
      outline: none;
      border-color: #9ca3af;
      box-shadow: 0 0 0 3px rgba(156, 163, 175, 0.1);
    }
    
    .bundle-variant-selector.hidden-selector {
      visibility: hidden;
      pointer-events: none;
    }
    
    /* Hide the original variant selector when bundle components are shown */
    .bundle-components-active .product__info .product-form__input {
      display: none !important;
    }
    
    /* Style adjustments to match the test page */
    @media (max-width: 768px) {
      .bundle-product-item {
        flex-wrap: wrap;
      }
      
      .bundle-variant-selector {
        width: 100%;
        margin-left: 0;
        margin-top: 10px;
      }
    }
  </style>
  
  <div class="bundle-components-container" id="bundle-components-display" data-product-id="{{ product.id }}">
    {% comment %} Direct rendering for CurlyTales product {% endcomment %}
    {% if product.id == 8157894312130 %}
      <div class="bundle-product-item" data-component-id="8157903552706" data-component-index="0">
        <div class="bundle-product-image">
          <img src="https://cdn.shopify.com/s/files/1/0520/2355/8338/files/CurlyTales-White-Chikan-Set-1.jpg?v=1742154098" alt="White Chikan Top" loading="lazy">
        </div>
        <div class="bundle-product-details">
          <div class="bundle-product-title">White Chikan Top</div>
          <div class="bundle-product-price">Rs. 2400.00</div>
        </div>
        <div class="bundle-variant-selector">
          <select class="bundle-variant-select" data-component-index="0" data-component-id="8157903552706">
            <option value="44032498516162" data-variant-index="0">S</option>
            <option value="44032498548930" data-variant-index="1">M</option>
            <option value="44032498581698" data-variant-index="2">L</option>
            <option value="44032498614466" data-variant-index="3">XL</option>
            <option value="44032498647234" data-variant-index="4">XXL</option>
          </select>
        </div>
      </div>
      
      <div class="bundle-product-item" data-component-id="8157903716546" data-component-index="1">
        <div class="bundle-product-image">
          <img src="https://cdn.shopify.com/s/files/1/0520/2355/8338/files/CurlyTales-White-Chikan-Set-2.jpg?v=1742154100" alt="White Chikan Bottom" loading="lazy">
        </div>
        <div class="bundle-product-details">
          <div class="bundle-product-title">White Chikan Bottom</div>
          <div class="bundle-product-price">Rs. 2400.00</div>
        </div>
        <div class="bundle-variant-selector hidden-selector">
          <select class="bundle-variant-select" data-component-index="1" data-component-id="8157903716546">
            <option value="44032498843842" data-variant-index="0">S</option>
            <option value="44032498876610" data-variant-index="1">M</option>
            <option value="44032498909378" data-variant-index="2">L</option>
            <option value="44032498942146" data-variant-index="3">XL</option>
            <option value="44032498974914" data-variant-index="4">XXL</option>
          </select>
        </div>
      </div>
    {% else %}
      {% comment %} Try to parse metafield for other products {% endcomment %}
      {% assign component_products_raw = product.metafields.bundle_app.component_products %}
      {% if component_products_raw == blank %}
        {% assign component_products_raw = product.metafields.bundle_app.component_products.value %}
      {% endif %}
      
      {% if component_products_raw != blank %}
        <div id="dynamic-bundle-components">
          <!-- Will be populated by JavaScript for other products -->
        </div>
      {% else %}
        <div class="bundle-loading">Bundle components not available</div>
      {% endif %}
    {% endif %}
  </div>
  
  <script>
    (function() {
      const PRODUCT_ID = {{ product.id }};
      
      console.log('Bundle section loaded for product:', PRODUCT_ID);
      
      // Component data for known products
      const componentData = {
        8157894312130: [ // CurlyTales White Chikan Set
          {
            id: 8157903552706,
            handle: 'curlytales-white-chikan-for-test-top',
            title: 'White Chikan Top',
            price: '2400.00',
            componentType: 'Top',
            variants: [
              {id: 44032498516162, title: 'S'},
              {id: 44032498548930, title: 'M'},
              {id: 44032498581698, title: 'L'},
              {id: 44032498614466, title: 'XL'},
              {id: 44032498647234, title: 'XXL'}
            ]
          },
          {
            id: 8157903716546,
            handle: 'curlytales-white-chikan-for-test-bottom',
            title: 'White Chikan Bottom',
            price: '2400.00',
            componentType: 'Bottom',
            variants: [
              {id: 44032498843842, title: 'S'},
              {id: 44032498876610, title: 'M'},
              {id: 44032498909378, title: 'L'},
              {id: 44032498942146, title: 'XL'},
              {id: 44032498974914, title: 'XXL'}
            ]
          }
        ],
        7698929287362: [ // Debina Bonnerjee Stripe Technicolour Coord Set
          {
            id: 8157903552706,
            handle: 'debina-bonnerjee-stripe-technicolour-coord-top',
            title: 'Stripe Technicolour Coord Top',
            price: '2499.00',
            componentType: 'Top',
            variants: [
              {id: 44032498516162, title: 'XS'},
              {id: 44032498548930, title: 'S'},
              {id: 44032498581698, title: 'M'},
              {id: 44032498614466, title: 'L'},
              {id: 44032498647234, title: 'XL'},
              {id: 44032498680002, title: 'XXL'}
            ]
          },
          {
            id: 8157903716546,
            handle: 'debina-bonnerjee-stripe-technicolour-coord-bottom',
            title: 'Stripe Technicolour Coord Bottom',
            price: '3500.00',
            componentType: 'Bottom',
            variants: [
              {id: 44032498843842, title: 'XS'},
              {id: 44032498876610, title: 'S'},
              {id: 44032498909378, title: 'M'},
              {id: 44032498942146, title: 'L'},
              {id: 44032498974914, title: 'XL'},
              {id: 44032499007682, title: 'XXL'}
            ]
          }
        ]
      };
      
      // Wait for DOM to be ready
      function initBundleComponents() {
        const container = document.getElementById('bundle-components-display');
        if (!container) {
          console.log('Bundle container not found');
          return;
        }
        
        // Add class to product form to hide original selectors
        const productForm = document.querySelector('.product__info');
        if (productForm) {
          productForm.classList.add('bundle-components-active');
        }
        
        // Store component data for cart functionality
        window.bundleComponentProducts = componentData[PRODUCT_ID] || [];
        
        // Setup variant synchronization for the CurlyTales product
        if (PRODUCT_ID === 8157894312130) {
          setupVariantSync();
        }
        
        // Setup cart override for all bundle products
        setupCartOverride();
        
        console.log('Bundle components initialized for product', PRODUCT_ID);
      }
      
      function setupVariantSync() {
        const container = document.getElementById('bundle-components-display');
        const firstSelector = container.querySelector('.bundle-variant-select[data-component-index="0"]');
        
        if (firstSelector) {
          firstSelector.addEventListener('change', function(e) {
            const selectedIndex = e.target.selectedIndex;
            
            // Update all hidden selectors to match
            const allSelectors = container.querySelectorAll('.bundle-variant-select');
            allSelectors.forEach(function(selector, idx) {
              if (idx > 0) {
                if (selector.options[selectedIndex]) {
                  selector.selectedIndex = selectedIndex;
                } else if (selector.options.length > 0) {
                  selector.selectedIndex = 0;
                }
              }
            });
            
            console.log('Variant synchronized across all components');
          });
          
          // Trigger initial sync
          firstSelector.dispatchEvent(new Event('change'));
        }
      }
      
      function setupCartOverride() {
        // Find all add to cart forms
        const addToCartForms = document.querySelectorAll('form[action*="/cart/add"]');
        
        addToCartForms.forEach(function(form) {
          // Clone to remove existing listeners
          const newForm = form.cloneNode(true);
          form.parentNode.replaceChild(newForm, form);
          
          // Add new submit handler
          newForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            if (!window.bundleComponentProducts || window.bundleComponentProducts.length === 0) {
              console.error('No bundle components found');
              return;
            }
            
            // Collect selected variants
            const items = [];
            const container = document.getElementById('bundle-components-display');
            
            window.bundleComponentProducts.forEach(function(component, index) {
              const selector = container.querySelector('.bundle-variant-select[data-component-index="' + index + '"]');
              let variantId;
              
              if (selector) {
                variantId = selector.value;
              } else if (component.variants && component.variants.length > 0) {
                variantId = component.variants[0].id;
              }
              
              if (variantId) {
                items.push({
                  id: parseInt(variantId),
                  quantity: 1,
                  properties: {
                    '_bundle_product': 'true',
                    '_bundle_id': PRODUCT_ID.toString(),
                    '_bundle_component': component.componentType || component.title
                  }
                });
              }
            });
            
            if (items.length === 0) {
              console.error('No items to add to cart');
              return;
            }
            
            console.log('Adding bundle items to cart:', items);
            
            // Find and disable submit button
            const submitBtn = newForm.querySelector('[type="submit"], button[name="add"], .product-form__submit');
            const originalBtnText = submitBtn ? submitBtn.textContent : '';
            
            if (submitBtn) {
              submitBtn.disabled = true;
              submitBtn.textContent = 'Adding...';
            }
            
            // Add all items to cart
            fetch('/cart/add.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              },
              body: JSON.stringify({ items: items })
            })
            .then(function(response) {
              if (!response.ok) {
                throw new Error('Failed to add to cart');
              }
              return response.json();
            })
            .then(function(data) {
              console.log('Bundle added to cart:', data);
              // Redirect to cart
              window.location.href = '/cart';
            })
            .catch(function(error) {
              console.error('Error adding to cart:', error);
              alert('Failed to add bundle to cart. Please try again.');
              
              // Re-enable button
              if (submitBtn) {
                submitBtn.disabled = false;
                submitBtn.textContent = originalBtnText;
              }
            });
          });
        });
        
        console.log('Cart override setup complete for bundle products');
      }
      
      // Initialize when DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initBundleComponents);
      } else {
        initBundleComponents();
      }
    })();
  </script>
{% endif %}

{% schema %}
{
  "name": "Bundle Components",
  "settings": [],
  "presets": [
    {
      "name": "Bundle Components"
    }
  ]
}
{% endschema %}
